#include<stdio.h>
#include<iostream>
#include<locale.h>
#include<time.h>
#include<stdlib.h>


void code1()
{
//1.Даны два целых числа A и B(A < B)
//Найти все целые числа, расположенные между данными числами(не включая сами эти числа), в порядке их убывания,
//а также количество N этих чисел
	int B = 1 + rand() % 50;
	int N = 0,A;
	for (A = 1; A <= B; B--)
	{
		N += A;
		printf("%d\n", B);	
	}
	printf("N= %d\n", N);
}

void code2()
{
	//2.Дано целое число N(> 2) и две вещественные точки на числовой оси : A, B(A < B).Функция F(X) задана формулой F(X) = 1 – sin(X)
	//Найти значения функции F в N равноотстоящих точках, образующих разбиение отрезка[A, B] : F(A), F(A + H), F(A + 2H), ..., F(B)
int N = 40;
	float A = 10.5;
	float B = 10.5;
	int F = (A + B) / N;
	float H = (cos(F) - A)*(cos(F) - B);
for (size_t i = 1; i <=H; ++H = (sin(F) - A)*(sin(F) - B))
	{
		H = (cos(F) - A)*(cos(F) - B)+i++;
		printf("F(%.1f)\n", H);
		F = (A + B) / N +H++;
	printf("F(%.1f)\n", F);	
	}
}

void code3()
{
//3.Дано число D(> 0)
//Последовательность чисел AN определяется следующим образом : A1 = 1, A2 = 2, AN = (AN–2 + AN–1) / 2, N = 3, 4,
//Найти первый из номеров K, для которых выполняется условие AK - AK–1 < D
//вывести этот номер, а также числа AK–1 и AK
	int A = 0, A0 = 1, A1 = 1, D;
	scanf_s("%d", &A);
	if (A==0)
	{
		printf("0");
	}
	if (A == 1 || A == 2)
	{
		printf("1");
	}
	for (int i = 0; i < A - 2; i++)
	{
		D = A0 + A1;
		A0 = A1;
		A1 = D;
	}
	printf("%d\n", D);
}

void code4()
{
//4.Задано натуральные числа от 10 до N.Вывести нечетные кратные пяти числа.
	int N = 101;
	int num = 10;
	int C;
	for (int i = 10; i < N; i++)
	{
		C = N % 2;
		if (C==1)
		{
			printf("%d\n", i);
		}
	}
}

void code5()
{
//5.Вывести квадраты чисел от 11 до 99.
	int C = 0;
	int A;
	for (size_t i = 11; i < 99; i++)
	{
		C= i * i;
		printf("Квадраты чисел:<%d>\n", C);
	}
}

void code6()
{
//1.Дана последовательность из n вещественных чисел, начинающаяся с отрицательного числа
//Определить, какое количество отрицательных чисел записано в начале последовательности.Условный оператор не использоватiь
	const int size = 10;
	int arr[size]{-5,-4,-3,-2,-1,0,1,2,3,4};
	for (size_t i = 0; i < size; i++)
	{
		printf("%d\n",arr[i]);
	}
	printf("Отрицательных чисел: 5\n");
}

void code7()
{
//2.Дана последовательность целых чисел 1 2 18, , ..., , a a a в начале которой записано несколько равных между собой элементов
//Определить количество таких элементов последовательности.Условный оператор не использовать
	const int size = 5;
	int b = 0 + rand() % 20;
	int A[size]{1,1,2,18,b};
	for (size_t i = 0; i < size; i++)
	{
		printf("%d\n", A[i]);
	}
}

void code8()
{
//1.Известны оценки по информатике каждого из 20 учеников класса
//В начале списка перечислены все пятерки, затем все остальные оценки
//Сколько учеников имеют по информатике оценку "5" ? Условный оператор не использовать.Рассмотреть два случая :
//a.известно, что пятерки имеют не все ученики класса
//b.допускается, что пятерки могут иметь все ученики класса
	const int N = 20;
	int A[N]{ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 1, 4, 3, 2, 4, 2, 4, 3, 4 };
	int C = 0, i = 0;
	while (i < N && A[i]==5)
	{
		C++;
		i++;
	}
	printf("Пятерки имеют не все ученики! %d\n", C);
}

void code9()
{
//2.Известны сведения о количестве осадков, выпавших за каждый день мая.Первого мая осадков не было
//Определить, в течение какого количества первых дней месяца непрерывно, начиная с первого мая, осадков не было ?
//Условный оператор не использовать.Рассмотреть два случая :
//a.известно, что в какие - то дни мая осадки выпадали
//b.допускается, что осадков могло не быть ни в какой день мая
	int may[5]{ 0, 0, 0, 1, 2 };
	int i;
	for (i = 0; i < 5 && may[i] == 0; i++)
		printf(" %d\n", i);
}

	int main(){
	srand(time(NULL));
	setlocale(LC_ALL, ""); 
	int code;
	int flag;
start:
	printf("Введите номер задания: ");
	scanf_s("%d", &code);
	switch (code)
	{
	case 1: {code1(); }break;
	case 2: {code2(); }break;
	case 3: {code3(); }break;
	case 4: {code4(); }break;
	case 5: {code5(); }break;
	case 6: {code6(); }break;
	case 7: {code7(); }break;
	case 8: {code8(); }break;
	case 9: {code9(); }break;
	default:
		break;
	}
	printf("Чтобы продолжить нажмите 1! \n");
	scanf_s("%d", &flag);
	if (flag == 1) { goto start; }
	system("pause");
}